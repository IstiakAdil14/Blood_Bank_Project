
package com.login;

import com.home.purchaseANDstorageInfo;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Hussain
 */
public class adminhome extends javax.swing.JFrame {

   
    public adminhome() {
        initComponents();
        Connect();
        //LoadIdNo();
        Date date = new Date();
        
        DonateDate.getJCalendar().setMaxSelectableDate(date);
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.YEAR, -20);
        Date twentyYearsAgo = cal.getTime();
        BirthDate.getJCalendar().setMaxSelectableDate(twentyYearsAgo);
        txtBloodGroup.setSelectedIndex(-1);
        txtGender.setSelectedIndex(-1);
        //jComboBox1.setSelectedIndex(-1);
         Id.setText("");
        
    }
    
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    public void Connect(){
       try{
           Class.forName("com.mysql.jdbc.Driver");
           con =DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
       }catch(Exception e){
          // Logger.getLogger(Reg.class.getName()).log(Level.SEVERE,null,e);
       } 

    }
   
   
    
     public void clearTextFieldsData(){
         Id.setText("");
         jTextField1.setText("");
        txtAddress.setText("");
        TxtFullName.setText("");
        txtCity.setText("");
        txtCellNo.setText("");
        txtGender.setSelectedIndex(-1);
        txtBloodGroup.setSelectedIndex(-1);
        //jComboBox1.setSelectedIndex(-1);
        DonateDate.setDate(null);
        BirthDate.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        UserName = new javax.swing.JLabel();
        TxtFullName = new javax.swing.JTextField();
        UserGender = new javax.swing.JLabel();
        txtGender = new javax.swing.JComboBox<>();
        LastDonateDate = new javax.swing.JLabel();
        DonateDate = new com.toedter.calendar.JDateChooser();
        UserCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCellNo = new javax.swing.JTextField();
        BirthDate = new com.toedter.calendar.JDateChooser();
        txtBloodGroup = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        UserAddress = new javax.swing.JLabel();
        BloodGroup = new javax.swing.JLabel();
        DateOfBirth = new javax.swing.JLabel();
        UserCellNo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        Id = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jButton5.setBackground(new java.awt.Color(0, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        UserName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UserName.setText("Full Name:");

        TxtFullName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TxtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtFullNameActionPerformed(evt);
            }
        });

        UserGender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UserGender.setText("Gender:");

        txtGender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        LastDonateDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LastDonateDate.setText("Last Donate Date: ");

        DonateDate.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N

        UserCity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UserCity.setText("City:");

        txtCity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtCellNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCellNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCellNoKeyPressed(evt);
            }
        });

        BirthDate.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N

        txtBloodGroup.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "B+", "AB+", "A-", "B-", "AB-", "O+", "O-" }));

        txtAddress.setColumns(20);
        txtAddress.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        jButton3.setBackground(new java.awt.Color(153, 255, 153));
        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 153, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        UserAddress.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UserAddress.setText("Address:");

        BloodGroup.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BloodGroup.setText("Blood Group:");

        DateOfBirth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DateOfBirth.setText("Date of Birth:");

        UserCellNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UserCellNo.setText("Cell No:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Email:");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel2.setText("Admin Home: ");

        jButton1.setBackground(new java.awt.Color(204, 153, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton1.setText("Display Userdetails ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 255, 51));
        jButton6.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton6.setText("Clear User Table");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 102, 102));
        jButton7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton7.setText("Display Donation For Blood");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 0, 0));
        jButton9.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton9.setText("Log Out");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 105, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(jButton9)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9)
                    .addContainerGap()))
        );

        jButton8.setBackground(new java.awt.Color(255, 153, 153));
        jButton8.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton8.setText("Blood Requests & Storage Info");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(0, 204, 204));
        jButton10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton10.setText("Donation Confirmation");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        Id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jButton11.setBackground(new java.awt.Color(0, 204, 204));
        jButton11.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton11.setText("Donation Confirmation table");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(UserCity, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(UserCellNo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addComponent(txtCellNo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(UserGender, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LastDonateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(36, 36, 36)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DonateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addComponent(TxtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(UserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(BloodGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(DateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TxtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(txtGender))
                            .addComponent(UserGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LastDonateDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DonateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCity)
                            .addComponent(UserCity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCellNo)
                            .addComponent(UserCellNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBloodGroup))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(UserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6))
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)
                                .addGap(23, 23, 23)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        /*
        String uname=jTextField1.getText();
        System.out.println("email: "+uname);
        
        try {
            String query = "SELECT FullName,Gender,LastDonateDate,City,CellNo,DateOfBirth,BloodGroup,Address from bbms.signup_table natural join bbms.userdetails where Email='" +uname+ "' ";
            con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            pst= con.prepareStatement(query);
            
            pst.setString(1, TxtFullName.getText());
            pst.setString(2, txtGender.getSelectedItem().toString());
            
            Date donate=DonateDate.getDate();
            if(donate != null){
                 pst.setObject(3, DonateDate.getDate());
            }
            else{
                 pst.setObject(3, BirthDate.getDate());
            }
            
            pst.setString(4, txtCity.getText());
            pst.setString(5, txtCellNo.getText());
            pst.setObject(6, BirthDate.getDate());
            pst.setString(7,txtBloodGroup.getSelectedItem().toString());
            pst.setString(8, txtAddress.getText());
            
            pst.executeUpdate();
           
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        */
        
        try{
            pst=con.prepareStatement("SELECT FullName,Gender,LastDonateDate,City,CellNo,DateOfBirth,BloodGroup,Address,Id from bbms.signup_table natural join bbms.userdetails where Email=?");
            String email =jTextField1.getText();
            pst.setString(1, email);
            ResultSet rs1 =pst.executeQuery();
            if(rs1.next()==false){
                JOptionPane.showMessageDialog(this, "Sorry record not found");
                 ///jTextField1.setText("");
                txtAddress.setText("");
                TxtFullName.setText("");
                txtCity.setText("");
                txtCellNo.setText("");
                txtGender.setSelectedIndex(-1);
                txtBloodGroup.setSelectedIndex(-1);
                //jComboBox1.setSelectedIndex(-1);
                DonateDate.setDate(null);
                BirthDate.setDate(null);
                Id.setText("");
                jTextField1.requestFocus();
            }else{
                txtAddress.setText(rs1.getString("Address"));
                TxtFullName.setText(rs1.getString("FullName"));
                txtCity.setText(rs1.getString("City"));
                txtCellNo.setText(rs1.getString("CellNo"));
                //txtGender.setSelectedIndex(-1);
                String UserGender=rs1.getString("Gender");
                switch(UserGender){
                case "Male":
                    txtGender.setSelectedIndex(0);
                    break;
                case "Female":
                    txtGender.setSelectedIndex(1);
                    break;           
                }
                //txtBloodGroup.setSelectedIndex(-1);
                String BloodGroup=rs1.getString("BloodGroup");
                switch(BloodGroup){
                case "A+":
                    txtBloodGroup.setSelectedIndex(0);
                    break;
                case "B+":
                    txtBloodGroup.setSelectedIndex(1);
                    break; 
                case "AB+":
                    txtBloodGroup.setSelectedIndex(2);
                    break; 
                case "A-":
                    txtBloodGroup.setSelectedIndex(3);
                    break; 
                case "B-":
                    txtBloodGroup.setSelectedIndex(4);
                    break; 
                case "AB-":
                    txtBloodGroup.setSelectedIndex(5);
                    break; 
                case "O+":
                    txtBloodGroup.setSelectedIndex(6);
                    break; 
                case "O-":
                    txtBloodGroup.setSelectedIndex(7);
                    break; 
            }
                //jComboBox1.setSelectedIndex(-1);
                //DonateDate.setDate(null);
                DonateDate.setDate(rs1.getDate("LastDonateDate"));
                BirthDate.setDate(rs1.getDate("DateOfBirth"));
                Id.setText(rs1.getString("Id"));
            }
        }
         catch (SQLException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void TxtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtFullNameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        clearTextFieldsData();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            int row = jTable2.getSelectedRow();
            String email =(jTable2.getModel().getValueAt(row, 9).toString());
            String query = "UPDATE `userdetails` SET `LastDonateDate` = ? WHERE `Id` ="+email;
            //con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            PreparedStatement pst= con.prepareStatement(query);

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(DonateDate.getDate());
            pst.setString(1, date);
            //pst.setString(2, email);
            pst.executeUpdate();
            //DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            //model.setRowCount(0);
            //show_user();
            JOptionPane.showMessageDialog(null, "Updated successfully!");
            jTable2.setModel(new DefaultTableModel());
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error updating data: " + e.getMessage());
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            int row = jTable2.getSelectedRow();
            String email =(jTable2.getModel().getValueAt(row, 9).toString());
            String query = "DELETE FROM `userdetails` WHERE `Id` ="+email;
            //con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            PreparedStatement pst= con.prepareStatement(query);

            //pst.setString(2, email);
            pst.executeUpdate();
            //DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            //model.setRowCount(0);
            //show_user();
            JOptionPane.showMessageDialog(null, "A record successfully!");
            jTable2.setModel(new DefaultTableModel());
            clearTextFieldsData();
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error updating data: " + e.getMessage());
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            Statement st=con.createStatement();
            String query="SELECT Email,FullName,Gender,LastDonateDate,City,CellNo,DateOfBirth,BloodGroup,Address,Id from bbms.signup_table natural join bbms.userdetails;";
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData rsmd=rs.getMetaData();
            DefaultTableModel model=(DefaultTableModel) jTable2.getModel();
            
            int cols = rsmd.getColumnCount();
            String [] colName = new String[cols];
            for(int i=0; i<cols; i++)
               colName[i]=rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            String Email, FullName,Gender,LastDonateDate,City,CellNo,DateOfBirth,BloodGroup,Address,Id;  
            
            while(rs.next()){
                Email=rs.getString(1);
                
                FullName=rs.getString(2);
                Gender=rs.getString(3);
                LastDonateDate=rs.getString(4);
                City=rs.getString(5);
                CellNo=rs.getString(6);
                DateOfBirth=rs.getString(7);
                BloodGroup=rs.getString(8);
                Address=rs.getString(9);
                Id=rs.getString(10);
                String[] row={Email, FullName,Gender,LastDonateDate,City,CellNo,DateOfBirth,BloodGroup,Address,Id};
                model.addRow(row);
            }
            
            st.close();
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            Statement st=con.createStatement();
            String query="SELECT Email FROM bbms.donation_requests";
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData rsmd=rs.getMetaData();
            DefaultTableModel model=(DefaultTableModel) jTable2.getModel();
            
            int cols = rsmd.getColumnCount();
            String [] colName = new String[cols];
            for(int i=0; i<cols; i++)
               colName[i]=rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            String  Email;  
            
            while(rs.next()){
                //Id=rs.getString(1);
                Email=rs.getString(1);
                //Message=rs.getString(2);
                
                
                String[] row={Email};
                model.addRow(row);
            }
            
            st.close();
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        
        int i = jTable2.getSelectedRow();
        TableModel model =jTable2.getModel();
        jTextField1.setText(model.getValueAt(i, 0).toString());
        TxtFullName.setText(model.getValueAt(i, 1).toString());
        String UserGender=model.getValueAt(i, 2).toString();
            switch(UserGender){
                case "Male":
                    txtGender.setSelectedIndex(0);
                    break;
                case "Female":
                    txtGender.setSelectedIndex(1);
                    break;           
            }
        //DonateDate.setObject(model.getValueAt(i, 4).toString());
        //DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        //int index =jTable2.getSelectedRow();
        //Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(index, 0));
        try{
            int srow=jTable2.getSelectedRow();
            Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(srow, 3));
            DonateDate.setDate(date1);
            
            Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(srow, 6));
            BirthDate.setDate(date2);
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        txtCity.setText(model.getValueAt(i, 4).toString());
        txtCellNo.setText(model.getValueAt(i, 5).toString());
        //BirthDate.setObject(model.getValueAt(i, 7).toString());
        String BloodGroup=model.getValueAt(i, 7).toString();
            switch(BloodGroup){
                case "A+":
                    txtBloodGroup.setSelectedIndex(0);
                    break;
                case "B+":
                    txtBloodGroup.setSelectedIndex(1);
                    break; 
                case "AB+":
                    txtBloodGroup.setSelectedIndex(2);
                    break; 
                case "A-":
                    txtBloodGroup.setSelectedIndex(3);
                    break; 
                case "B-":
                    txtBloodGroup.setSelectedIndex(4);
                    break; 
                case "AB-":
                    txtBloodGroup.setSelectedIndex(5);
                    break; 
                case "O+":
                    txtBloodGroup.setSelectedIndex(6);
                    break; 
                case "O-":
                    txtBloodGroup.setSelectedIndex(7);
                    break; 
            }
        txtAddress.setText(model.getValueAt(i, 8).toString());
         Id.setText(model.getValueAt(i, 9).toString());
        
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtCellNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCellNoKeyPressed
        // TODO add your handling code here:
        String phoneNumber = txtCellNo.getText();
        int length =phoneNumber.length();

        char c = evt.getKeyChar();

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<11){
                txtCellNo.setEditable(true);
            }else{
                txtCellNo.setEditable(false);
            }
        }else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtCellNo.setEditable(true);
            }else{
                txtCellNo.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtCellNoKeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        setVisible(false);
        LoginFrame a = new LoginFrame();
        a.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        jTable2.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        purchaseANDstorageInfo a = new purchaseANDstorageInfo();
        a.setVisible(true); 
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        /*
        send msg to selected useremail.
        msg= msg = yes,we can provide you blood.
                        Contact:admin@gmail.com.
                                01704080389
        */
        String email = jTextField1.getText();

        String jdbcUrl = "jdbc:mysql://localhost:3306/bbms";
        String username = "root";
        String password = "adil";
        
        
        try {
            // Establish database connection
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

            // Check if the email already exists in the confirmation table
            String checkQuery = "SELECT COUNT(*) FROM donation_confirmation_table WHERE Email = ?";
            PreparedStatement checkStmt = connection.prepareStatement(checkQuery);
            checkStmt.setString(1, email);
            ResultSet resultSet = checkStmt.executeQuery();
            resultSet.next();
            int count = resultSet.getInt(1);

            if (count == 0) {
                // Email is unique, insert it into the confirmation table
                String insertQuery = "INSERT INTO donation_confirmation_table (email) VALUES (?)";
                PreparedStatement insertStmt = connection.prepareStatement(insertQuery);
                insertStmt.setString(1, email);
                
                String insertQuery1 = "DELETE FROM donation_requests WHERE Email = ?";
                PreparedStatement insertStmt1 = connection.prepareStatement(insertQuery1);
                insertStmt1.setString(1, email);
                insertStmt1.executeUpdate();
                
                //String BlooodGroup = jTable1.getModel().getValueAt(row, 0).toString();
               
                int rowsAffected = insertStmt.executeUpdate();
                if (rowsAffected > 0) {
                    System.out.println("Email inserted successfully!");
                    //JOptionPane.showMessageDialog(null, "Email inserted successfully!");
                    String query = "UPDATE  blood_storage natural join donation_confirmation_table  SET Amount = Amount + 450 WHERE `Email` = ?";

                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, jTextField1.getText());
                    //pst.setString(2, txtBloodGroup1.getSelectedItem().toString());
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Donation confirmation successfully! Please,update the donate date");
                    
                
                } else {
                    System.out.println("Error inserting email.");
                    JOptionPane.showMessageDialog(null, "Error inserting email.");
                }
            } else {
                System.out.println("Email already exists in the confirmation table.");
                JOptionPane.showMessageDialog(null, "Email already exists in the confirmation table.");
            }

            // Close resources
            resultSet.close();
            checkStmt.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/bbms", "root", "adil");
            Statement st=con.createStatement();
            String query="SELECT Email FROM bbms.donation_confirmation_table";
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData rsmd=rs.getMetaData();
            DefaultTableModel model=(DefaultTableModel) jTable2.getModel();
            
            int cols = rsmd.getColumnCount();
            String [] colName = new String[cols];
            for(int i=0; i<cols; i++)
               colName[i]=rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            String  Email;  
            
            while(rs.next()){
                //Id=rs.getString(1);
                Email=rs.getString(1);
                //Message=rs.getString(2);
                
                
                String[] row={Email};
                model.addRow(row);
            }
            
            st.close();
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminhome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser BirthDate;
    private javax.swing.JLabel BloodGroup;
    private javax.swing.JLabel DateOfBirth;
    private com.toedter.calendar.JDateChooser DonateDate;
    private javax.swing.JTextField Id;
    private javax.swing.JLabel LastDonateDate;
    private javax.swing.JTextField TxtFullName;
    private javax.swing.JLabel UserAddress;
    private javax.swing.JLabel UserCellNo;
    private javax.swing.JLabel UserCity;
    private javax.swing.JLabel UserGender;
    private javax.swing.JLabel UserName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JComboBox<String> txtBloodGroup;
    private javax.swing.JTextField txtCellNo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JComboBox<String> txtGender;
    // End of variables declaration//GEN-END:variables
}


/*A+
B+
AB+
A-
B-
AB-
O+
O-
*/